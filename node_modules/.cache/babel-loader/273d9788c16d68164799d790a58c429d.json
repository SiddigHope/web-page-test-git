{"ast":null,"code":"var _jsxFileName = \"/media/siddig/windows/reactjs-apps/web-page-test/src/Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Form, Input, Button } from 'antd';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    backgroundColor: '#e3e3e3',\n    marginRight: 20,\n    marginLeft: 20,\n    borderRadius: 30,\n    boxShadow: '1px 3px .05px #4444',\n    padding: 20\n  },\n  formDiv: {\n    width: '50%',\n    padding: 20\n  },\n  form: {},\n  data: {\n    width: '50%',\n    justifyContent: 'space-around',\n    alignItems: 'flex-end'\n  },\n  text: {\n    alignSelf: 'flex-start',\n    fontSize: 20\n  }\n}));\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nconst Account = () => {\n  _s();\n\n  const [form] = Form.useForm();\n  const classes = useStyle();\n  const [formLayout] = useState('horizontal');\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState(\"https://e7.pngegg.com/pngimages/84/165/png-clipart-united-states-avatar-organization-information-user-avatar-service-computer-wallpaper.png\");\n\n  const handleChange = info => {\n    console.log(info.file);\n\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, imageUrl => setImageUrl(imageUrl), setLoading(false));\n    }\n  };\n\n  const handleSubmit = values => {\n    console.log(String(values));\n  };\n\n  const today = new Date();\n\n  const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.text,\n      children: [\"Last Login : \", today.toUTCString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formDiv,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: classes.form,\n          layout: formLayout,\n          form: form,\n          initialValues: {\n            layout: formLayout\n          },\n          onSubmit: values => handleSubmit(values),\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"SiddigHope\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              placeholder: \"Type your old password here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              placeholder: \"Type your New password here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              placeholder: \"Type your New password again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Upload, {\n            name: \"avatar\",\n            listType: \"picture-card\",\n            className: \"avatar-uploader\",\n            showUploadList: false,\n            action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n            beforeUpload: beforeUpload,\n            onChange: handleChange,\n            children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              alt: \"avatar\",\n              style: {\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 41\n            }, this) : uploadButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              children: \"Update Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Account, \"kadshKTtNWTtAJMYOSGs1IWC3B8=\", false, function () {\n  return [Form.useForm, useStyle];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/media/siddig/windows/reactjs-apps/web-page-test/src/Account.js"],"names":["React","useState","Form","Input","Button","makeStyles","Typography","Upload","message","LoadingOutlined","PlusOutlined","useStyle","container","display","justifyContent","backgroundColor","marginRight","marginLeft","borderRadius","boxShadow","padding","formDiv","width","form","data","alignItems","text","alignSelf","fontSize","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","Account","useForm","classes","formLayout","loading","setLoading","imageUrl","setImageUrl","handleChange","info","console","log","status","originFileObj","handleSubmit","values","String","today","Date","uploadButton","marginTop","toUTCString","layout"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Form, Input, Button } from 'antd';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst useStyle = makeStyles(() => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        backgroundColor: '#e3e3e3',\n        marginRight: 20,\n        marginLeft: 20,\n        borderRadius: 30,\n        boxShadow: '1px 3px .05px #4444',\n        padding: 20\n    },\n    formDiv: {\n        width: '50%',\n        padding: 20\n    },\n    form: {\n    },\n    data: {\n        width: '50%',\n        justifyContent: 'space-around',\n        alignItems: 'flex-end',\n    },\n    text: {\n        alignSelf: 'flex-start',\n        fontSize: 20\n    }\n}))\n\n\nfunction getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n        message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n        message.error('Image must smaller than 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n}\n\n\nconst Account = () => {\n    const [form] = Form.useForm();\n    const classes = useStyle()\n    const [formLayout] = useState('horizontal');\n    const [loading, setLoading] = useState(false);\n    const [imageUrl, setImageUrl] = useState(\"https://e7.pngegg.com/pngimages/84/165/png-clipart-united-states-avatar-organization-information-user-avatar-service-computer-wallpaper.png\");\n\n\n    const handleChange = info => {\n        console.log(info.file)\n        if (info.file.status === 'uploading') {\n            setLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            getBase64(info.file.originFileObj, imageUrl =>\n                setImageUrl(imageUrl),\n                setLoading(false)\n            );\n        }\n    };\n\n\n\n    const handleSubmit = values => {\n        console.log(String(values))\n    }\n\n    const today = new Date()\n\n    const uploadButton = (\n        <div>\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n\n    return (\n        <>\n            <Typography className={classes.text}>\n                Last Login : {today.toUTCString()}\n            </Typography>\n            <div className={classes.container}>\n                <div className={classes.formDiv}>\n                    <Form\n                        className={classes.form}\n                        layout={formLayout}\n                        form={form}\n                        initialValues={{\n                            layout: formLayout,\n                        }}\n                        onSubmit={(values) => handleSubmit(values)}\n                    >\n                        <Form.Item>\n                            <Input placeholder=\"SiddigHope\" />\n                        </Form.Item>\n                        <Form.Item>\n                            <Input type='password' placeholder=\"Type your old password here\" />\n                        </Form.Item>\n                        <Form.Item>\n                            <Input type='password' placeholder=\"Type your New password here\" />\n                        </Form.Item>\n                        <Form.Item>\n                            <Input type='password' placeholder=\"Type your New password again\" />\n                        </Form.Item>\n                        <Upload\n                            name=\"avatar\"\n                            listType=\"picture-card\"\n                            className=\"avatar-uploader\"\n                            showUploadList={false}\n\n                            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                            beforeUpload={beforeUpload}\n                            onChange={handleChange}\n                        >\n                            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                        </Upload>\n                        <Form.Item >\n                            <Button type=\"primary\">Update Account</Button>\n                        </Form.Item>\n                    </Form>\n\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Account"]},"metadata":{},"sourceType":"module"}