{"ast":null,"code":"var _jsxFileName = \"/media/siddig/windows/reactjs-apps/web-page-test/src/Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Form, Input, Button, Radio, Alert } from 'antd';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    backgroundColor: '#e3e3e3',\n    marginRight: 20,\n    marginLeft: 20,\n    borderRadius: 30,\n    boxShadow: '1px 3px .05px #4444',\n    padding: 20\n  },\n  formDiv: {\n    width: '50%',\n    padding: 20\n  },\n  form: {\n    backgroundColor: 'red'\n  },\n  data: {\n    width: '50%',\n    justifyContent: 'space-around',\n    alignItems: 'flex-end'\n  },\n  text: {\n    alignSelf: 'flex-start',\n    fontSize: 20\n  }\n}));\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nconst Account = () => {\n  _s();\n\n  const [form] = Form.useForm();\n  const classes = useStyle();\n  const [formLayout] = useState('horizontal');\n  const [username, setUsername] = useState('SiddigHope');\n  const [password, setPassword] = useState('password');\n  const [photo, setPhoto] = useState('horizontal');\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState(\"https://e7.pngegg.com/pngimages/84/165/png-clipart-united-states-avatar-organization-information-user-avatar-service-computer-wallpaper.png\");\n\n  const handleChange = info => {\n    console.log(info.file);\n\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, imageUrl => setImageUrl(imageUrl), setLoading(false));\n    }\n  };\n\n  const formItemLayout = formLayout === 'horizontal' ? {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 14\n    }\n  } : null;\n\n  const handleSubmit = values => {\n    console.log(String(values));\n  };\n\n  const today = new Date();\n\n  const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n\n  const setFile = file => console.log(file);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formDiv,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: classes.form,\n        layout: formLayout,\n        form: form,\n        initialValues: {\n          layout: formLayout\n        },\n        onSubmit: values => handleSubmit(values),\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"SiddigHope\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: \"Type your old password here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: \"Type your New password here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: \"Type your New password again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Upload, {\n          name: \"avatar\",\n          listType: \"picture-card\",\n          className: \"avatar-uploader\",\n          showUploadList: false,\n          action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n          beforeUpload: beforeUpload,\n          onChange: handleChange,\n          children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: \"avatar\",\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this) : uploadButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"Update Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Account, \"e0zbPWPJ7lAYdkj9KCu4LXnQM6g=\", false, function () {\n  return [Form.useForm, useStyle];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/media/siddig/windows/reactjs-apps/web-page-test/src/Account.js"],"names":["React","useState","ReactDOM","Form","Input","Button","Radio","Alert","makeStyles","Typography","Upload","message","LoadingOutlined","PlusOutlined","useStyle","container","display","justifyContent","backgroundColor","marginRight","marginLeft","borderRadius","boxShadow","padding","formDiv","width","form","data","alignItems","text","alignSelf","fontSize","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","Account","useForm","classes","formLayout","username","setUsername","password","setPassword","photo","setPhoto","loading","setLoading","imageUrl","setImageUrl","handleChange","info","console","log","status","originFileObj","formItemLayout","labelCol","span","wrapperCol","handleSubmit","values","String","today","Date","uploadButton","marginTop","setFile","layout"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Form, Input, Button, Radio, Alert } from 'antd';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst useStyle = makeStyles(() => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        backgroundColor: '#e3e3e3',\n        marginRight: 20,\n        marginLeft: 20,\n        borderRadius:30,\n        boxShadow: '1px 3px .05px #4444',\n        padding: 20\n    },\n    formDiv: {\n        width: '50%',\n        padding: 20\n    },\n    form: {\n        backgroundColor: 'red'\n    },\n    data: {\n        width: '50%',\n        justifyContent: 'space-around',\n        alignItems: 'flex-end',\n    },\n    text: {\n        alignSelf: 'flex-start',\n        fontSize: 20\n    }\n}))\n\n\nfunction getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n        message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n        message.error('Image must smaller than 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n}\n\n\nconst Account = () => {\n    const [form] = Form.useForm();\n    const classes = useStyle()\n    const [formLayout] = useState('horizontal');\n    const [username, setUsername] = useState('SiddigHope');\n    const [password, setPassword] = useState('password');\n    const [photo, setPhoto] = useState('horizontal');\n    const [loading, setLoading] = useState(false);\n    const [imageUrl, setImageUrl] = useState(\"https://e7.pngegg.com/pngimages/84/165/png-clipart-united-states-avatar-organization-information-user-avatar-service-computer-wallpaper.png\");\n\n\n    const handleChange = info => {\n        console.log(info.file)\n        if (info.file.status === 'uploading') {\n            setLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            getBase64(info.file.originFileObj, imageUrl =>\n                setImageUrl(imageUrl),\n                setLoading(false)\n            );\n        }\n    };\n\n    const formItemLayout =\n        formLayout === 'horizontal'\n            ? {\n                labelCol: {\n                    span: 4,\n                },\n                wrapperCol: {\n                    span: 14,\n                },\n            }\n            : null;\n\n    const handleSubmit = values => {\n        console.log(String(values))\n    }\n\n    const today = new Date()\n\n    const uploadButton = (\n        <div>\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n\n    const setFile = file => console.log(file)\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.formDiv}>\n            <Form\n                className={classes.form}\n                layout={formLayout}\n                form={form}\n                initialValues={{\n                    layout: formLayout,\n                }}\n                onSubmit={(values) => handleSubmit(values)}\n            >\n                <Form.Item>\n                    <Input placeholder=\"SiddigHope\" />\n                </Form.Item>\n                <Form.Item>\n                    <Input type='password' placeholder=\"Type your old password here\" />\n                </Form.Item>\n                <Form.Item>\n                    <Input type='password' placeholder=\"Type your New password here\" />\n                </Form.Item>\n                <Form.Item>\n                    <Input type='password' placeholder=\"Type your New password again\" />\n                </Form.Item>\n                <Upload\n                    name=\"avatar\"\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    showUploadList={false}\n                    \n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                    beforeUpload={beforeUpload}\n                    onChange={handleChange}\n                >\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                </Upload>\n                <Form.Item >\n                    <Button type=\"primary\">Update Account</Button>\n                </Form.Item>\n            </Form>\n            </div>\n            {/* <div className={classes.data}>\n                <Typography className={classes.text}>\n                    Username : {username}\n                </Typography>\n                <Typography className={classes.text}>\n                    Password: {password}\n                </Typography>\n                <div className={classes.avatar}>\n                    <Typography className={classes.text}>\n                        Avatar:\n                    </Typography>\n                    <Upload\n                    name=\"avatar\"\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    showUploadList={false}\n                    disabled\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                    beforeUpload={beforeUpload}\n                    onChange={handleChange}\n                >\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                </Upload>\n                </div>\n                <Typography className={classes.text}>\n                    Last Login :{today.toUTCString()}\n                </Typography>\n            </div> */}\n        </div>\n    );\n};\n\nexport default Account"]},"metadata":{},"sourceType":"module"}