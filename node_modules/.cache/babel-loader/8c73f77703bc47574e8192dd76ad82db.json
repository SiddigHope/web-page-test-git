{"ast":null,"code":"var _jsxFileName = \"/media/siddig/windows/reactjs-apps/web-page-test/src/Account.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Form, Input, InputNumber, Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n/* eslint-disable no-template-curly-in-string */\n\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not a valid email!',\n    number: '${label} is not a valid number!'\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}'\n  }\n};\n/* eslint-enable no-template-curly-in-string */\n\nconst Account = () => {\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    name: \"nest-messages\",\n    onFinish: onFinish,\n    validateMessages: validateMessages,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: ['user', 'name'],\n      label: \"Name\",\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: ['user', 'email'],\n      label: \"Email\",\n      rules: [{\n        type: 'email'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: ['user', 'age'],\n      label: \"Age\",\n      rules: [{\n        type: 'number',\n        min: 0,\n        max: 99\n      }],\n      children: /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: ['user', 'website'],\n      label: \"Website\",\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: ['user', 'introduction'],\n      label: \"Introduction\",\n      children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: { ...layout.wrapperCol,\n        offset: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Account;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Account, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 85,\n  columnNumber: 17\n}, this), document.getElementById('container'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/media/siddig/windows/reactjs-apps/web-page-test/src/Account.js"],"names":["React","ReactDOM","Form","Input","InputNumber","Button","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","Account","onFinish","values","console","log","type","min","max","offset","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Form, Input, InputNumber, Button } from 'antd';\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\n/* eslint-disable no-template-curly-in-string */\n\nconst validateMessages = {\n    required: '${label} is required!',\n    types: {\n        email: '${label} is not a valid email!',\n        number: '${label} is not a valid number!',\n    },\n    number: {\n        range: '${label} must be between ${min} and ${max}',\n    },\n};\n/* eslint-enable no-template-curly-in-string */\n\nconst Account = () => {\n    const onFinish = (values) => {\n        console.log(values);\n    };\n\n    return (\n        <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n            <Form.Item\n                name={['user', 'name']}\n                label=\"Name\"\n                rules={[\n                    {\n                        required: true,\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                name={['user', 'email']}\n                label=\"Email\"\n                rules={[\n                    {\n                        type: 'email',\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                name={['user', 'age']}\n                label=\"Age\"\n                rules={[\n                    {\n                        type: 'number',\n                        min: 0,\n                        max: 99,\n                    },\n                ]}\n            >\n                <InputNumber />\n            </Form.Item>\n            <Form.Item name={['user', 'website']} label=\"Website\">\n                <Input />\n            </Form.Item>\n            <Form.Item name={['user', 'introduction']} label=\"Introduction\">\n                <Input.TextArea />\n            </Form.Item>\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n        </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nReactDOM.render(<Account />, document.getElementById('container'));"]},"metadata":{},"sourceType":"module"}