{"ast":null,"code":"var _jsxFileName = \"/media/siddig/windows/reactjs-apps/web-page-test/src/RenderTable.js\";\nimport React from 'react';\nimport MaterialTable, { MTableToolbar, Icons } from 'material-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headCells = [{\n  field: 'name',\n  id: 'name',\n  numeric: false,\n  disablePadding: true,\n  title: 'Dessert (100g serving)'\n}, {\n  field: 'calories',\n  id: 'calories',\n  numeric: true,\n  disablePadding: false,\n  title: 'Calories'\n}, {\n  field: 'fat',\n  id: 'fat',\n  numeric: true,\n  disablePadding: false,\n  title: 'Fat (g)'\n}, {\n  field: 'carbs',\n  id: 'carbs',\n  numeric: true,\n  disablePadding: false,\n  title: 'Carbs (g)'\n}, {\n  field: 'protein',\n  id: 'protein',\n  numeric: true,\n  disablePadding: false,\n  title: 'Protein (g)'\n}];\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nconst rows = [createData('Cupcake', 305, 3.7, 67, 4.3), createData('Donut', 452, 25.0, 51, 4.9), createData('Eclair', 262, 16.0, 24, 6.0), createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Gingerbread', 356, 16.0, 49, 3.9), createData('Honeycomb', 408, 3.2, 87, 6.5), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Jelly Bean', 375, 0.0, 94, 0.0), createData('KitKat', 518, 26.0, 65, 7.0), createData('Lollipop', 392, 0.2, 98, 0.0), createData('Marshmallow', 318, 0, 81, 2.0), createData('Nougat', 360, 19.0, 9, 37.0), createData('Oreo', 437, 18.0, 63, 4.0)];\nexport default function RenderImage() {\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    title: \"Render Fake Data\",\n    columns: headCells,\n    data: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_c = RenderImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderImage\");","map":{"version":3,"sources":["/media/siddig/windows/reactjs-apps/web-page-test/src/RenderTable.js"],"names":["React","MaterialTable","MTableToolbar","Icons","headCells","field","id","numeric","disablePadding","title","createData","name","calories","fat","carbs","protein","rows","RenderImage"],"mappings":"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","sourcesContent":["import React from 'react'\nimport MaterialTable, { MTableToolbar, Icons } from 'material-table';\n\nconst headCells = [\n    { field: 'name', id: 'name', numeric: false, disablePadding: true, title: 'Dessert (100g serving)' },\n    { field: 'calories', id: 'calories', numeric: true, disablePadding: false, title: 'Calories' },\n    { field: 'fat', id: 'fat', numeric: true, disablePadding: false, title: 'Fat (g)' },\n    { field: 'carbs', id: 'carbs', numeric: true, disablePadding: false, title: 'Carbs (g)' },\n    { field: 'protein', id: 'protein', numeric: true, disablePadding: false, title: 'Protein (g)' },\n];\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name: name, calories: calories, fat: fat, carbs: carbs, protein: protein };\n}\n\nconst rows = [\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Donut', 452, 25.0, 51, 4.9),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n    createData('Honeycomb', 408, 3.2, 87, 6.5),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Jelly Bean', 375, 0.0, 94, 0.0),\n    createData('KitKat', 518, 26.0, 65, 7.0),\n    createData('Lollipop', 392, 0.2, 98, 0.0),\n    createData('Marshmallow', 318, 0, 81, 2.0),\n    createData('Nougat', 360, 19.0, 9, 37.0),\n    createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nexport default function RenderImage() {\n    return (\n        <MaterialTable\n            title=\"Render Fake Data\"\n            columns={headCells}\n            data={rows}\n        />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}