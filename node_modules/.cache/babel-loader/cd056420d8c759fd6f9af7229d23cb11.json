{"ast":null,"code":"var _jsxFileName = \"/media/siddig/windows/reactjs-apps/web-page-test/src/DnD.js\";\nimport React, { Component } from \"react\";\nimport { TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper } from '@material-ui/core';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport ReactDOM from \"react-dom\"; // fake data generator\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getItems = count => Array.from({\n  length: count\n}, (v, k) => k).map(k => ({\n  id: `item-${k}`,\n  primary: `item ${k}`,\n  secondary: k % 2 === 0 ? `Whatever for ${k}` : undefined\n})); // a little function to help us with reordering the result\n\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nconst getItemStyle = (isDragging, draggableStyle) => ({ // styles we need to apply on draggables\n  ...draggableStyle,\n  ...(isDragging && {\n    background: \"rgb(235,235,235)\"\n  })\n});\n\nexport default class DndTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: getItems(10)\n    };\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n\n  onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    console.log(`dragEnd ${result.source.index} to  ${result.destination.index}`);\n    const items = reorder(this.state.items, result.source.index, result.destination.index);\n    this.setState({\n      items\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Nr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          component: DroppableComponent(this.onDragEnd),\n          children: this.state.items.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            component: DraggableComponent(item.id, index),\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              scope: \"row\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.primary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: item.secondary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst DraggableComponent = (id, index) => props => {\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: id,\n    index: index,\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(TableRow, {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n      ...props,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\nconst DroppableComponent = onDragEnd => props => {\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: '1',\n      direction: \"vertical\",\n      children: provided => {\n        return /*#__PURE__*/_jsxDEV(TableBody, {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          ...props,\n          children: [props.children, provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(DndTable, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 124,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/media/siddig/windows/reactjs-apps/web-page-test/src/DnD.js"],"names":["React","Component","TableContainer","Table","TableBody","TableCell","TableHead","TableRow","Paper","DragDropContext","Droppable","Draggable","ReactDOM","getItems","count","Array","from","length","v","k","map","id","primary","secondary","undefined","reorder","list","startIndex","endIndex","result","removed","splice","getItemStyle","isDragging","draggableStyle","background","DndTable","constructor","props","state","items","onDragEnd","bind","destination","console","log","source","index","setState","render","DroppableComponent","item","DraggableComponent","provided","snapshot","innerRef","draggableProps","dragHandleProps","style","children","droppableProps","placeholder","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper } from '@material-ui/core'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\nimport ReactDOM from \"react-dom\"\n\n\n// fake data generator\nconst getItems = count =>\n    Array.from({ length: count }, (v, k) => k).map(k => ({\n        id: `item-${k}`,\n        primary: `item ${k}`,\n        secondary: k % 2 === 0 ? `Whatever for ${k}` : undefined\n    }))\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list)\n    const [removed] = result.splice(startIndex, 1)\n    result.splice(endIndex, 0, removed)\n\n    return result\n}\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // styles we need to apply on draggables\n    ...draggableStyle,\n\n    ...(isDragging && {\n        background: \"rgb(235,235,235)\"\n    })\n})\n\nexport default class DndTable extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            items: getItems(10)\n        }\n        this.onDragEnd = this.onDragEnd.bind(this)\n    }\n\n    onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n            return\n        }\n\n        console.log(`dragEnd ${result.source.index} to  ${result.destination.index}`)\n        const items = reorder(\n            this.state.items,\n            result.source.index,\n            result.destination.index\n        )\n\n        this.setState({\n            items\n        })\n    }\n\n    render() {\n        return (\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Nr</TableCell>\n                            <TableCell>Label</TableCell>\n                            <TableCell align=\"right\">Text</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody component={DroppableComponent(this.onDragEnd)}>\n                        {this.state.items.map((item, index) => (\n                            <TableRow component={DraggableComponent(item.id, index)} key={item.id} >\n                                <TableCell scope=\"row\">{index + 1}</TableCell>\n                                <TableCell>{item.primary}</TableCell>\n                                <TableCell align=\"right\">{item.secondary}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        )\n    }\n}\n\nconst DraggableComponent = (id, index) => (props) => {\n    return (\n        <Draggable draggableId={id} index={index}>\n            {(provided, snapshot) => (\n                <TableRow\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\n\n                    {...props}\n                >\n                    {props.children}\n                </TableRow>\n            )}\n        </Draggable>\n    )\n}\n\nconst DroppableComponent = (\n    onDragEnd: (result, provided) => void) => (props) =>\n{\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId={'1'} direction=\"vertical\">\n                {(provided) => {\n                    return (\n                        <TableBody ref={provided.innerRef} {...provided.droppableProps} {...props}>\n                            {props.children}\n                            {provided.placeholder}\n                        </TableBody>\n                    )\n                }}\n            </Droppable>\n        </DragDropContext>\n    )\n}\n\nReactDOM.render(<DndTable />, document.getElementById(\"root\"))"]},"metadata":{},"sourceType":"module"}