{"ast":null,"code":"var _jsxFileName = \"/media/siddig/windows/reactjs-apps/web-page-test/src/System.js\";\nimport React from 'react';\nimport 'react-dropdown/style.css';\nimport 'react-table/react-table.css';\nimport ReactTable from \"react-table\";\nimport { CSVLink } from \"react-csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  Header: 'name',\n  accessor: 'name' // String-based value accessors!\n\n}, {\n  Header: 'age',\n  accessor: 'age'\n}];\n\nclass AllPostPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.download = this.download.bind(this);\n    this.state = {\n      tableproperties: {\n        allData: [{\n          \"name\": \"ramesh\",\n          \"age\": \"12\"\n        }, {\n          \"name\": \"bill\",\n          \"age\": \"13\"\n        }, {\n          \"name\": \"arun\",\n          \"age\": \"9\"\n        }, {\n          \"name\": \"kathy\",\n          \"age\": \"21\"\n        }]\n      },\n      dataToDownload: []\n    };\n  }\n\n  download(event) {\n    const currentRecords = this.reactTable.getResolvedState().sortedData;\n    var data_to_download = [];\n\n    for (var index = 0; index < currentRecords.length; index++) {\n      let record_to_download = {};\n\n      for (var colIndex = 0; colIndex < columns.length; colIndex++) {\n        record_to_download[columns[colIndex].Header] = currentRecords[index][columns[colIndex].accessor];\n      }\n\n      data_to_download.push(record_to_download);\n    }\n\n    this.setState({\n      dataToDownload: data_to_download\n    }, () => {\n      // click the CSVLink component to trigger the CSV download\n      this.csvLink.link.click();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.download,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CSVLink, {\n          data: this.state.dataToDownload,\n          filename: \"data.csv\",\n          className: \"hidden\",\n          ref: r => this.csvLink = r,\n          target: \"_blank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ReactTable, {\n          ref: r => this.reactTable = r,\n          data: this.state.tableproperties.allData,\n          columns: columns,\n          filterable: true,\n          defaultFilterMethod: (filter, row) => String(row[filter.id]).toLowerCase().includes(filter.value.toLowerCase())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default AllPostPage;","map":{"version":3,"sources":["/media/siddig/windows/reactjs-apps/web-page-test/src/System.js"],"names":["React","ReactTable","CSVLink","columns","Header","accessor","AllPostPage","Component","constructor","props","download","bind","state","tableproperties","allData","dataToDownload","event","currentRecords","reactTable","getResolvedState","sortedData","data_to_download","index","length","record_to_download","colIndex","push","setState","csvLink","link","click","render","r","filter","row","String","id","toLowerCase","includes","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'react-dropdown/style.css'\nimport 'react-table/react-table.css'\nimport ReactTable from \"react-table\";\nimport { CSVLink } from \"react-csv\";\n\nconst columns = [\n    {\n        Header: 'name',\n        accessor: 'name', // String-based value accessors!\n    },\n    {\n        Header: 'age',\n        accessor: 'age',\n\n    }]\nclass AllPostPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.download = this.download.bind(this);\n        this.state = {\n            tableproperties: {\n                allData: [\n                    { \"name\": \"ramesh\", \"age\": \"12\" },\n                    { \"name\": \"bill\", \"age\": \"13\" },\n                    { \"name\": \"arun\", \"age\": \"9\" },\n                    { \"name\": \"kathy\", \"age\": \"21\" }\n                ]\n            },\n            dataToDownload: []\n        };\n    }\n\n    download(event) {\n        const currentRecords = this.reactTable.getResolvedState().sortedData;\n        var data_to_download = []\n        for (var index = 0; index < currentRecords.length; index++) {\n            let record_to_download = {}\n            for (var colIndex = 0; colIndex < columns.length; colIndex++) {\n                record_to_download[columns[colIndex].Header] = currentRecords[index][columns[colIndex].accessor]\n            }\n            data_to_download.push(record_to_download)\n        }\n        this.setState({ dataToDownload: data_to_download }, () => {\n            // click the CSVLink component to trigger the CSV download\n            this.csvLink.link.click()\n        })\n    }\n\n    render() {\n        return <div>\n            <div>\n                <button onClick={this.download}>\n                    Download\n                    </button>\n            </div>\n            <div>\n                <CSVLink\n                    data={this.state.dataToDownload}\n                    filename=\"data.csv\"\n                    className=\"hidden\"\n                    ref={(r) => this.csvLink = r}\n                    target=\"_blank\" />\n\n            </div>\n            <div>\n                <ReactTable ref={(r) => this.reactTable = r}\n                    data={this.state.tableproperties.allData} columns={columns} filterable\n                    defaultFilterMethod={(filter, row) =>\n                        String(row[filter.id]).toLowerCase().includes(filter.value.toLowerCase())}\n                />\n            </div>\n        </div>\n    }\n}\n\nexport default AllPostPage;"]},"metadata":{},"sourceType":"module"}