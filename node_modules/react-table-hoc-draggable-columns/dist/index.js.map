{"version":3,"file":"index.js","sources":["../src/dom-helper.js","../src/index.js"],"sourcesContent":["const stripHtml = element => element.innerHTML.replace(/<[^>]*>?/gm, '')\n\nconst parseStrDimensionToInt = elementSize => parseInt(elementSize, 10)\n\nconst getOffset = el => {\n  var rect = el.getBoundingClientRect()\n\n  return {\n    top: rect.top + document.body.scrollTop,\n    left: rect.left + document.body.scrollLeft\n  }\n}\n\nconst index = element => {\n  let children = element.parentNode.childNodes\n  let num = 0\n  for (var i = 0; i < children.length; i++) {\n    if (children[i] === element) return num\n    if (children[i].nodeType === 1) num++\n  }\n  return -1\n}\n\nconst getAttribute = (element, attributeName) => {\n  return element.getAttribute(attributeName)\n}\n\nconst addClass = (element, className) => {\n  if (element.classList) element.classList.add(className)\n  else element.className += ' ' + className\n}\n\nconst removeClass = (element, className) => {\n  if (element.classList) element.classList.remove(className)\n  else {\n    element.className = element.className.replace(\n      new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'),\n      ' '\n    )\n  }\n}\n\nconst hasClass = (element, className) => {\n  if (element.classList) return element.classList.contains(className)\n  else return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className)\n}\n\nconst findFirstChildWithClassName = (element, className) => {\n  const matches = element.getElementsByClassName(className)\n\n  if (matches && matches.length > 0) return matches[0]\n\n  return null\n}\n\nconst findChildrenWithClassName = (parentElement, className) => {\n  return parentElement.getElementsByClassName(className)\n}\n\nconst getHiddenElementOuterHeight = element => {\n  element.style.visibility = 'hidden'\n  element.style.display = 'block'\n  let elementHeight = element.offsetHeight\n  element.style.display = 'none'\n  element.style.visibility = 'visible'\n\n  return elementHeight\n}\n\nconst getHiddenElementOuterWidth = element => {\n  element.style.visibility = 'hidden'\n  element.style.display = 'block'\n  let elementWidth = element.offsetWidth\n  element.style.display = 'none'\n  element.style.visibility = 'visible'\n\n  return elementWidth\n}\n\nconst getElementWidth = el => {\n  let width = el.offsetWidth\n  let style = getComputedStyle(el)\n\n  width -=\n    parseFloat(style.paddingLeft) +\n    parseFloat(style.paddingRight) +\n    parseFloat(style.borderLeftWidth) +\n    parseFloat(style.borderRightWidth)\n\n  return width\n}\n\nconst getElementHeight = el => {\n  let height = el.offsetHeight\n  let style = getComputedStyle(el)\n\n  height -=\n    parseFloat(style.paddingTop) +\n    parseFloat(style.paddingBottom) +\n    parseFloat(style.borderTopWidth) +\n    parseFloat(style.borderBottomWidth)\n\n  return height\n}\n\nexport default {\n  stripHtml,\n  parseStrDimensionToInt,\n  getOffset,\n  index,\n  getAttribute,\n  addClass,\n  removeClass,\n  hasClass,\n  getHiddenElementOuterHeight,\n  getHiddenElementOuterWidth,\n  findFirstChildWithClassName,\n  findChildrenWithClassName,\n  getElementWidth,\n  getElementHeight\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport DomHelper from './dom-helper'\nimport './styles.scss'\n\nexport const DragMode = {\n  REORDER: 'reorder',\n  SWAP: 'swap'\n}\n\n/**\n * Generate UuId\n * */\nconst generateUuid = () => {\n  let uuid = ''\n  let i\n  let random\n  for (i = 0; i < 32; i++) {\n    random = (Math.random() * 16) | 0\n\n    if (i === 8 || i === 12 || i === 16 || i === 20) {\n      uuid += '-'\n    }\n    uuid += (i === 12 ? 4 : i === 16 ? (random & 3) | 8 : random).toString(16)\n  }\n\n  return uuid\n}\n\nexport default Component => {\n  const wrapper = class RTFixedDraggableColumn extends React.Component {\n    getWrappedInstance() {\n      if (!this.wrappedInstance) console.warn('RTDraggableColumn - No wrapped instance')\n      if (this.wrappedInstance.getWrappedInstance) return this.wrappedInstance.getWrappedInstance()\n      else return this.wrappedInstance\n    }\n\n    containerRef = React.createRef();\n    currentColumnOrder = [];\n\n    constructor(props) {\n      super(props)\n      this.dragged = null\n      this.reorder = []\n      this.colsNoExtraContainingDiv = []\n      this.state = {\n        trigger: 0,\n        firstLoad: true\n      }\n\n      this.uniqueId = generateUuid()\n    }\n\n    // helper methods\n    findParentHeader(element) {\n      // need to check typeof to avoid errors when traversing special elements like SVGs\n      if (element.className && typeof element.className === 'string' && element.className.includes('rt-th')) {\n        return element\n      } else {\n        let parent = element.parentElement\n        while (typeof parent.className !== 'string' || !parent.className.includes('rt-th')) {\n          parent = parent.parentElement\n          if (!parent) break\n        }\n        return parent\n      }\n    }\n\n    getFirstChildWithColumnIndexAttributeValue(element) {\n      const header = DomHelper.findFirstChildWithClassName(element, 'draggable-header')\n\n      if (header) {\n        return DomHelper.getAttribute(header, 'data-column-index')\n      }\n    }\n    // end helper methods\n\n    createDragEvents() {\n      const headersCollection = DomHelper.findChildrenWithClassName(\n        this.containerRef.current,\n        `${this.uniqueId} draggable-header`\n      )\n\n      // convert HTML collection to Javascript array\n      const headers = [...headersCollection]\n\n      headers.forEach((header, i) => {\n        // only allow drag events on drag enabled columns\n        if (header.className.includes('enable-drag')) {\n          const headerParent = header.parentNode\n\n          const {\n            draggableColumns: { enableColumnWideDrag = defaultProps.enableColumnWideDrag }\n          } = this.props\n\n          if (enableColumnWideDrag) {\n            headerParent.setAttribute('draggable', true)\n          } else {\n            header.setAttribute('draggable', true)\n            DomHelper.addClass(headerParent, 'transparent-border')\n          }\n\n          // ondragstart event\n          headerParent.ondragstart = e => {\n            e.stopPropagation()\n\n            const {\n              draggableColumns: {\n                disableTableScroll,\n                useDragImage = defaultProps.useDragImage,\n                dragImageClassName = defaultProps.dragImageClassName\n              }\n            } = this.props\n\n            if (disableTableScroll) {\n              const tableBody = DomHelper.findFirstChildWithClassName(\n                this.containerRef.current,\n                'rt-table'\n              )\n\n              if (tableBody) {\n                tableBody.style.overflow = 'hidden'\n              }\n            }\n\n            // counter used as a workaround for dragleave event fired when hovering over a child element\n            this.counter = 0\n            this.dragged = i\n            this.draggedName = DomHelper.stripHtml(headerParent)\n            this.draggedColumn = this.findParentHeader(headerParent)\n\n            this.iconWidth = DomHelper.getHiddenElementOuterWidth(this.reorderIndicatorUp)\n            this.iconHeight = DomHelper.getHiddenElementOuterHeight(this.reorderIndicatorUp)\n\n            e.dataTransfer.setData('text', 'b') // Firefox requires this to make dragging possible\n\n            if (useDragImage) {\n              const crt = this.draggedColumn.cloneNode(true)\n\n              crt.className = dragImageClassName\n              const columnWidth = DomHelper.getElementWidth(this.draggedColumn)\n              const columnHeight = DomHelper.getElementHeight(this.draggedColumn)\n\n              // calculate offset from draggedColumn element\n              let xOffSet = Math.floor(columnWidth / 2)\n              const yOffSet = Math.floor(columnHeight / 2)\n\n              // max-width of 150px, otherwise it looks blurry in Chrome (Windows)\n              if (columnWidth > 150) {\n                crt.style.width = '150px'\n                xOffSet = 150 / 2\n              }\n\n              crt.style.position = 'absolute'\n              crt.style.top = '-1000px'\n\n              document.body.appendChild(crt)\n              e.dataTransfer.effectAllowed = 'move'\n              e.dataTransfer.setDragImage(crt, xOffSet, yOffSet)\n\n              // set refernce to cloned Node\n              this.clone = crt\n            }\n          }\n\n          // ondrag event\n          headerParent.ondrag = e => {\n            e.stopPropagation()\n          }\n\n          headerParent.ondragenter = e => {\n            e.stopPropagation()\n            e.preventDefault()\n            this.counter++\n\n            if (DomHelper.stripHtml(e.target) !== this.draggedName) {\n              const {\n                draggableColumns: {\n                  mode = defaultProps.mode,\n                  onDragEnterClassName = defaultProps.onDragEnterClassName\n                }\n              } = this.props\n\n              if (mode === DragMode.SWAP && onDragEnterClassName) {\n                const dropHeader = this.findParentHeader(e.target)\n                DomHelper.addClass(dropHeader.firstChild, onDragEnterClassName)\n              }\n            }\n          }\n\n          // ondragover event\n          headerParent.ondragover = e => {\n            e.preventDefault()\n\n            // prevent bug when using multiple react tables\n            if (!this.draggedColumn) return\n\n            const {\n              draggableColumns: { mode = defaultProps.mode }\n            } = this.props\n\n            const dropHeader = this.findParentHeader(e.target)\n\n            // in reorder mode only\n            if (mode === DragMode.REORDER) {\n              if (DomHelper.stripHtml(e.target) !== this.draggedName) {\n                const containerOffset = DomHelper.getOffset(this.containerRef.current)\n                const dropHeaderOffset = DomHelper.getOffset(dropHeader)\n                const targetLeft = dropHeaderOffset.left - containerOffset.left\n                const columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2\n\n                const tableBodyBoundingRec = DomHelper.findFirstChildWithClassName(\n                  this.containerRef.current,\n                  'rt-table'\n                ).getBoundingClientRect()\n\n                // determine current table viewport\n                const maxVisibleXPos = tableBodyBoundingRec.right\n                const minVisibleXPos = 0 - Math.ceil(this.iconWidth / 2)\n\n                this.reorderIndicatorUp.style.top =\n                  dropHeaderOffset.top - containerOffset.top - (this.iconHeight + 3) + 'px'\n\n                this.reorderIndicatorDown.style.top =\n                  dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 3 + 'px'\n\n                if (e.pageX > columnCenter) {\n                  this.reorderIndicatorUp.style.left =\n                    targetLeft + dropHeader.offsetWidth - Math.ceil(this.iconWidth / 2) + 'px'\n                  this.reorderIndicatorDown.style.left =\n                    targetLeft + dropHeader.offsetWidth - Math.ceil(this.iconWidth / 2) + 'px'\n                  this.dropPosition = 1\n                } else {\n                  this.reorderIndicatorUp.style.left =\n                    targetLeft - Math.ceil(this.iconWidth / 2) + 'px'\n                  this.reorderIndicatorDown.style.left =\n                    targetLeft - Math.ceil(this.iconWidth / 2) + 'px'\n\n                  this.dropPosition = -1\n                }\n\n                if (\n                  DomHelper.parseStrDimensionToInt(this.reorderIndicatorUp.style.left) >\n                    maxVisibleXPos ||\n                  DomHelper.parseStrDimensionToInt(this.reorderIndicatorUp.style.left) <\n                    minVisibleXPos\n                ) {\n                  // do not show indicators if position is outside leftmost or rightmost bounds of the react table\n                  this.reorderIndicatorUp.style.display = 'none'\n                  this.reorderIndicatorDown.style.display = 'none'\n                } else {\n                  this.reorderIndicatorUp.style.display = 'block'\n                  this.reorderIndicatorDown.style.display = 'block'\n                  this.reorderIndicatorUp.style.zIndex = 50\n                  this.reorderIndicatorDown.style.zIndex = 50\n                }\n              }\n            }\n          }\n\n          headerParent.ondragleave = e => {\n            e.preventDefault()\n\n            this.counter--\n\n            const {\n              draggableColumns: {\n                mode = defaultProps.mode,\n                onDragEnterClassName = defaultProps.onDragEnterClassName\n              }\n            } = this.props\n\n            if (mode === DragMode.REORDER) {\n              if (this.counter === 0) {\n                this.reorderIndicatorUp.style.display = 'none'\n                this.reorderIndicatorDown.style.display = 'none'\n              }\n            } else if (mode === DragMode.SWAP) {\n              if (this.counter === 0 && onDragEnterClassName) {\n                const dropHeader = this.findParentHeader(e.target)\n                DomHelper.removeClass(dropHeader.firstChild, onDragEnterClassName)\n              }\n            }\n          }\n\n          // ondrop event\n          headerParent.ondrop = e => {\n            e.preventDefault()\n\n            // prevent bug when using multiple react tables\n            if (!this.draggedColumn) return\n\n            const {\n              draggableColumns: { mode = defaultProps.mode, onDropSuccess }\n            } = this.props\n\n            if (mode === DragMode.REORDER) {\n              // only move if the dragged column is meets position threshold\n              let dragIndex = DomHelper.index(this.draggedColumn)\n              let dropIndex = DomHelper.index(this.findParentHeader(e.target))\n\n              // for the future\n              // this.getFirstChildWithColumnIndexAttributeValue(this.draggedColumn)\n\n              let allowDrop = dragIndex !== dropIndex\n\n              if (\n                allowDrop &&\n                ((dropIndex - dragIndex === 1 && this.dropPosition === -1) ||\n                  (dragIndex - dropIndex === 1 && this.dropPosition === 1))\n              ) {\n                allowDrop = false\n              }\n\n              if (allowDrop) {\n                // readjust dropIndex value for edge cases\n                // if dragging a column from left to right\n                if (this.dragged < dropIndex) {\n                  if (this.dropPosition === -1) {\n                    dropIndex = dropIndex - 1\n                  }\n                } else {\n                  // dragging a column from right to left\n                  if (this.dropPosition === 1) {\n                    dropIndex = dropIndex + 1\n                  }\n                }\n\n                this.reorder.push({ a: dropIndex, b: this.dragged })\n\n                if (onDropSuccess) {\n                  const containerOffset = DomHelper.getOffset(this.containerRef.current)\n\n                  // adjust offSets to be respective to the containerOffset\n                  const oldOffset = DomHelper.getOffset(this.draggedColumn)\n                  oldOffset.top = oldOffset.top - containerOffset.top\n                  oldOffset.left = oldOffset.left - containerOffset.left\n\n                  const newOffset = DomHelper.getOffset(this.findParentHeader(e.target))\n                  newOffset.top = newOffset.top - containerOffset.top\n                  newOffset.left = newOffset.left - containerOffset.left\n\n                  // (draggedColumn, targetColumn, oldIndex, newIndex, oldOffset, newOffset)\n                  onDropSuccess(\n                    this.colsNoExtraContainingDiv[this.dragged],\n                    this.colsNoExtraContainingDiv[dropIndex],\n                    this.dragged,\n                    dropIndex,\n                    oldOffset,\n                    newOffset\n                  )\n                }\n              }\n            } else if (mode === DragMode.SWAP) {\n              this.reorder.push({ a: i, b: this.dragged })\n\n              if (onDropSuccess) {\n                // (draggedColumn, targetColumn, oldIndex, newIndex)\n                onDropSuccess(\n                  this.currentColumnOrder[this.dragged],\n                  this.currentColumnOrder[i],\n                  this.dragged,\n                  i\n                )\n              }\n            }\n\n            this.dragged = null\n            this.draggedName = null\n            this.draggedColumn = null\n            this.dropPosition = null\n            this.counter = 0\n            this.reorderIndicatorUp.style.display = 'none'\n            this.reorderIndicatorDown.style.display = 'none'\n            // trigger a re-render\n            this.setState({ trigger: Math.random(), firstLoad: false })\n          }\n\n          // ondragend event\n          headerParent.ondragend = e => {\n            const {\n              draggableColumns: { disableTableScroll, overflow }\n            } = this.props\n\n            e.stopPropagation()\n\n            if (this.clone) {\n              document.body.removeChild(this.clone)\n              this.clone = null\n            }\n\n            if (disableTableScroll) {\n              const tableBody = DomHelper.findFirstChildWithClassName(\n                this.containerRef.current,\n                'rt-table'\n              )\n\n              if (tableBody) {\n                tableBody.style.overflow = overflow || defaultProps.overflow\n              }\n            }\n          }\n        }\n      })\n    }\n\n    componentDidMount() {\n      if (this.props.draggableColumns.draggable.length > 0) this.createDragEvents()\n    }\n\n    componentDidUpdate() {\n      const { onDraggedColumnChange } = this.props.draggableColumns\n      if (!this.state.firstLoad) {\n        const originalOrder = this.previousOrder.map((col) => {\n          if (typeof col.accessor === 'function') return col.id\n          return col.accessor\n        })\n\n        const newOrder = this.currentColumnOrder.map((col) => {\n          if (typeof col.accessor === 'function') return col.id\n          return col.accessor\n        })\n\n        // if order is not equal, then call onDraggedColumnChange prop\n        if (JSON.stringify(originalOrder) !== JSON.stringify(newOrder)) {\n          // pass back updated order of columns without added containing drag DIV\n          if (onDraggedColumnChange) {\n            onDraggedColumnChange(this.colsNoExtraContainingDiv)\n          }\n        }\n      }\n\n      if (this.props.draggableColumns.draggable.length > 0) this.createDragEvents()\n    }\n\n    // prevent side effects such as accidentally resizing column while dragging a column\n    stopPropagation = e => {\n      e.stopPropagation()\n    };\n\n    render() {\n      const { columns: origColumns, draggableColumns, ...rest } = this.props\n      const {\n        draggable = defaultProps.draggable,\n        mode = defaultProps.mode,\n        reorderIndicatorUpClassName = defaultProps.reorderIndicatorUpClassName,\n        reorderIndicatorDownClassName = defaultProps.reorderIndicatorDownClassName\n      } = draggableColumns\n\n      let reorderIndicatorUp = (\n        <span\n          ref={el => {\n            this.reorderIndicatorUp = el\n          }}\n          className={`arrow arrow-bar is-top ${reorderIndicatorUpClassName}`}\n          style={{ position: 'absolute', display: 'none' }}\n        />\n      )\n\n      let reorderIndicatorDown = (\n        <span\n          ref={el => {\n            this.reorderIndicatorDown = el\n          }}\n          className={`arrow arrow-bar is-bottom ${reorderIndicatorDownClassName}`}\n          style={{ position: 'absolute', display: 'none' }}\n        />\n      )\n\n      // separate out visible and hidden columns\n      const visibleColumns = origColumns.filter(col => col.show === true || col.show === undefined)\n      const hiddenColumns = origColumns.filter(col => col.show === false)\n\n      // place hidden columns at very end of array\n      // having a hidden column inbetween two draggable columns will cause this HOC to improperly calculate the new column index positions\n      const adjustedOrigColumns = [...visibleColumns, ...hiddenColumns]\n      // shallow copy of columns without added containing drag DIV\n      this.colsNoExtraContainingDiv = [...adjustedOrigColumns]\n      const cols = adjustedOrigColumns.map((col, index) => {\n        let headerClassName = `${this.uniqueId} draggable-header`\n\n        // add additional className if column is draggable enabled\n        if (\n          (draggable.length > 0 && draggable.includes(col.id)) ||\n          draggable.includes(col.accessor)\n        ) {\n          headerClassName = `${headerClassName} enable-drag`\n        }\n\n        return {\n          ...col,\n          Header:\n            typeof col.Header === 'function' ? (\n              <div className={headerClassName} data-column-index={index}>\n                {col.Header()}\n              </div>\n            ) : (\n              <div className={headerClassName} data-column-index={index}>\n                {col.Header}\n              </div>\n            )\n        }\n      })\n\n      //const previousOrder = [...this.currentColumnOrder]\n      this.previousOrder = [...this.currentColumnOrder]\n\n      // run all reorder events\n      if (mode && mode === DragMode.SWAP) {\n        this.reorder.forEach(o => (cols[o.a] = cols.splice(o.b, 1, cols[o.a])[0]))\n        this.reorder.forEach(o => (this.colsNoExtraContainingDiv[o.a] = this.colsNoExtraContainingDiv.splice(o.b, 1, this.colsNoExtraContainingDiv[o.a])[0]))\n      } else {\n        // mode: reorder - default\n        this.reorder.forEach(o => cols.splice(o.a, 0, cols.splice(o.b, 1)[0]))\n        this.reorder.forEach(o => this.colsNoExtraContainingDiv.splice(o.a, 0, this.colsNoExtraContainingDiv.splice(o.b, 1)[0]))\n      }\n\n      // track final column order\n      this.currentColumnOrder = cols\n\n      // fire change event?\n    /*  if (!this.state.firstLoad) {\n        const originalOrder = this.previousOrder.map(col => {\n          if (typeof col.accessor === 'function') return col.id\n          return col.accessor\n        })\n\n        const newOrder = cols.map(col => {\n          if (typeof col.accessor === 'function') return col.id\n          return col.accessor\n        })\n\n        // if order is not equal, then call onDraggedColumnChange prop\n        if (JSON.stringify(originalOrder) !== JSON.stringify(newOrder)) {\n          // pass back updated order of columns without added containing drag DIV\n          if (onDraggedColumnChange) onDraggedColumnChange(colsNoExtraContainingDiv)\n        }\n      }*/\n\n      // render\n      return (\n        <div\n          className='rt-draggable-container'\n          ref={this.containerRef}\n          style={{ position: 'relative' }}\n        >\n          <Component\n            {...rest}\n            draggableColumns={draggableColumns}\n            columns={cols}\n            ref={r => (this.wrappedInstance = r)}\n          />\n          {reorderIndicatorUp}\n          {reorderIndicatorDown}\n        </div>\n      )\n    }\n  }\n\n  const defaultProps = {\n    mode: DragMode.REORDER,\n    draggable: [],\n    enableColumnWideDrag: true,\n    disableTableScroll: false,\n    overflow: 'auto',\n    useDragImage: true,\n    dragImageClassName: 'rt-dragged-item',\n    onDragEnterClassName: 'rt-drag-enter-item',\n    reorderIndicatorUpClassName: '',\n    reorderIndicatorDownClassName: ''\n  }\n\n  wrapper.displayName = 'RTDraggableColumn'\n\n  wrapper.propTypes = {\n    draggableColumns: PropTypes.shape({\n      /** mode to either reorder the column or swap column position on drop */\n      mode: PropTypes.oneOf([DragMode.REORDER, DragMode.SWAP]).isRequired,\n      /** array of string-based column accessors or column ids (when using a custom accessor) to allow drag and drop */\n      draggable: PropTypes.arrayOf(PropTypes.string),\n      /** if {true} then entire header column is draggable.  If {false} then only header column text is draggable.\n       * Set to {false} if you experience buggyness when using with react-table column sorting/resizing functionality\n       */\n      enableColumnWideDrag: PropTypes.bool,\n      /** disable ReactTable horizontal/vertical scrolling when dragging a column */\n      disableTableScroll: PropTypes.bool,\n      /** used with disableTableScroll={true} to reset ReactTable overflow style onDragEnd event */\n      overflow: PropTypes.string,\n      /** clone dragged column?  useful for applying a different css class */\n      useDragImage: PropTypes.bool,\n      /** dragImageClassName only applies when useDragImage={true} */\n      dragImageClassName: PropTypes.string,\n      /** Swap mode only - css class */\n      onDragEnterClassName: PropTypes.string,\n      /** callback method to be notified when on column drop success - signature: function(draggedColumn, targetColumn, oldIndex, newIndex, oldOffset, newOffset)  */\n      onDropSuccess: PropTypes.func,\n      /** callback method to be notified when column order changes - signature: function(columns)  */\n      onDraggedColumnChange: PropTypes.func,\n      /** additional className for reorder indicator Up */\n      reorderIndicatorUpClassName: PropTypes.string,\n      /** additional className for reorder indicator Down */\n      reorderIndicatorDownClassName: PropTypes.string\n    })\n  }\n\n  return wrapper\n}\n"],"names":["stripHtml","element","innerHTML","replace","parseStrDimensionToInt","parseInt","elementSize","getOffset","rect","el","getBoundingClientRect","top","document","body","scrollTop","left","scrollLeft","index","children","parentNode","childNodes","num","i","length","nodeType","getAttribute","attributeName","addClass","className","classList","add","removeClass","remove","RegExp","split","join","hasClass","contains","test","findFirstChildWithClassName","matches","getElementsByClassName","findChildrenWithClassName","parentElement","getHiddenElementOuterHeight","style","visibility","display","elementHeight","offsetHeight","getHiddenElementOuterWidth","elementWidth","offsetWidth","getElementWidth","width","getComputedStyle","parseFloat","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","getElementHeight","height","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","DragMode","generateUuid","uuid","random","Math","toString","wrapper","wrappedInstance","console","warn","getWrappedInstance","props","containerRef","React","createRef","currentColumnOrder","stopPropagation","dragged","reorder","colsNoExtraContainingDiv","state","uniqueId","includes","parent","header","DomHelper","headersCollection","current","headers","forEach","headerParent","draggableColumns","enableColumnWideDrag","defaultProps","setAttribute","ondragstart","disableTableScroll","useDragImage","dragImageClassName","tableBody","overflow","counter","draggedName","draggedColumn","findParentHeader","iconWidth","reorderIndicatorUp","iconHeight","dataTransfer","setData","crt","cloneNode","columnWidth","columnHeight","xOffSet","floor","yOffSet","position","appendChild","effectAllowed","setDragImage","clone","ondrag","ondragenter","preventDefault","e","target","mode","onDragEnterClassName","SWAP","dropHeader","firstChild","ondragover","REORDER","containerOffset","dropHeaderOffset","targetLeft","columnCenter","tableBodyBoundingRec","maxVisibleXPos","right","minVisibleXPos","ceil","reorderIndicatorDown","pageX","dropPosition","zIndex","ondragleave","ondrop","onDropSuccess","dragIndex","dropIndex","allowDrop","push","a","b","oldOffset","newOffset","setState","trigger","firstLoad","ondragend","removeChild","draggable","createDragEvents","onDraggedColumnChange","originalOrder","previousOrder","map","col","accessor","id","newOrder","JSON","stringify","origColumns","columns","rest","reorderIndicatorUpClassName","reorderIndicatorDownClassName","visibleColumns","filter","show","undefined","hiddenColumns","adjustedOrigColumns","cols","headerClassName","Header","o","splice","r","Component","displayName","propTypes","PropTypes","shape","oneOf","isRequired","arrayOf","string","bool","func"],"mappings":"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"}